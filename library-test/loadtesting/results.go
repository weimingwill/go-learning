package loadtesting

import (
	"time"
)

// Result represents the metrics defined out of an http.Response
// generated by each target hit
type Result struct {
	Code      uint16        `json:"code"`
	Timestamp time.Time     `json:"timestamp"`
	Latency   time.Duration `json:"latency"`
	Error     string        `json:"error"`
}

type Metrics struct {
	Requests uint64
	Success  float64
	Errors   map[string]int

	success uint64
}

func (m *Metrics) Add(r *Result) {
	m.init()

	m.Requests++

	if r.Code >= 200 && r.Code < 400 {
		m.success++
	}

	if r.Error != "" {
		_, ok := m.Errors[r.Error]
		if !ok {
			m.Errors[r.Error] = 0
		}

		m.Errors[r.Error]++
	}
}

func (m *Metrics) Close() {
	m.Success = float64(m.success) / float64(m.Requests)
}

func (m *Metrics) init() {
	if m.Errors == nil {
		m.Errors = map[string]int{}
	}
}
